{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\root\\\\counter-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"C:\\\\Users\\\\root\\\\counter-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\root\\\\counter-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\root\\\\counter-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\root\\\\counter-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\root\\\\counter-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\root\\\\counter-app\\\\src\\\\components\\\\counters.jsx\";\nimport React, { Component } from \"react\";\nimport Counter from \"../components/counter\";\n\nvar Counters =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Counters, _Component);\n\n  function Counters() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Counters);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Counters)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      counters: [{\n        id: 1,\n        value: 0\n      }, {\n        id: 2,\n        value: 10\n      }, {\n        id: 3,\n        value: 5\n      }, {\n        id: 4,\n        value: 4\n      }]\n    };\n\n    _this.handleDelete = function (counterID) {\n      _this.setState({\n        counters: _this.state.counters.filter(function (counter) {\n          return counter.id !== counterID;\n        })\n      });\n    };\n\n    _this.addCounter = function () {\n      var ids = _this.state.counters.map(function (counter) {\n        return counter.id;\n      });\n\n      var maxID = 1;\n\n      if (ids.length > 0) {\n        maxID = Math.max.apply(Math, _toConsumableArray(ids)) + 1;\n      }\n\n      _this.setState({\n        counters: _this.state.counters.concat({\n          id: maxID,\n          value: 0\n        })\n      });\n    };\n\n    _this.handleIncrement = function (counterID) {\n      _this.setState({\n        counters: _this.state.counters.filter(function (counter) {\n          if (counter.id === counterID) {\n            counter.value++;\n          }\n\n          return counter;\n        })\n      });\n    };\n\n    _this.handleDecrement = function (counterID) {\n      _this.setState({\n        counters: _this.state.counters.filter(function (counter) {\n          if (counter.id === counterID && counter.value > 0) {\n            counter.value--;\n          }\n\n          return counter;\n        })\n      });\n    };\n\n    _this.resetValues = function () {\n      _this.setState({\n        counters: _this.state.counters.map(function (counter) {\n          counter.value = 0;\n          return counter;\n        })\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Counters, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-success btn-md\",\n        onClick: this.addCounter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, \"Add\"), React.createElement(\"button\", {\n        className: \"btn btn-info btn-md\",\n        style: {\n          marginLeft: \"2%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, \"Reset\"), this.state.counters.map(function (counter) {\n        return React.createElement(Counter, {\n          key: counter.id,\n          onDelete: _this2.handleDelete,\n          onIncrement: _this2.handleIncrement,\n          onDecrement: _this2.handleDecrement,\n          counter: counter,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        });\n      }));\n    }\n  }]);\n\n  return Counters;\n}(Component);\n\nexport default Counters;","map":{"version":3,"sources":["C:\\Users\\root\\counter-app\\src\\components\\counters.jsx"],"names":["React","Component","Counter","Counters","state","counters","id","value","handleDelete","counterID","setState","filter","counter","addCounter","ids","map","maxID","length","Math","max","concat","handleIncrement","handleDecrement","resetValues","marginLeft"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Counter from \"../components/counter\";\r\n\r\nclass Counters extends Component {\r\n  state = {\r\n    counters: [\r\n      { id: 1, value: 0 },\r\n      { id: 2, value: 10 },\r\n      { id: 3, value: 5 },\r\n      { id: 4, value: 4 }\r\n    ]\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <button className=\"btn btn-success btn-md\" onClick={this.addCounter}>\r\n          Add\r\n        </button>\r\n        <button className=\"btn btn-info btn-md\" style={{ marginLeft: \"2%\" }}>\r\n          Reset\r\n        </button>\r\n        {this.state.counters.map(counter => (\r\n          <Counter\r\n            key={counter.id}\r\n            onDelete={this.handleDelete}\r\n            onIncrement={this.handleIncrement}\r\n            onDecrement={this.handleDecrement}\r\n            counter={counter}\r\n          />\r\n        ))}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  handleDelete = counterID => {\r\n    this.setState({\r\n      counters: this.state.counters.filter(counter => counter.id !== counterID)\r\n    });\r\n  };\r\n\r\n  addCounter = () => {\r\n    const ids = this.state.counters.map(counter => counter.id);\r\n    let maxID = 1;\r\n    if (ids.length > 0) {\r\n      maxID = Math.max(...ids) + 1;\r\n    }\r\n    this.setState({\r\n      counters: this.state.counters.concat({ id: maxID, value: 0 })\r\n    });\r\n  };\r\n\r\n  handleIncrement = counterID => {\r\n    this.setState({\r\n      counters: this.state.counters.filter(counter => {\r\n        if (counter.id === counterID) {\r\n          counter.value++;\r\n        }\r\n        return counter;\r\n      })\r\n    });\r\n  };\r\n\r\n  handleDecrement = counterID => {\r\n    this.setState({\r\n      counters: this.state.counters.filter(counter => {\r\n        if (counter.id === counterID && counter.value > 0) {\r\n          counter.value--;\r\n        }\r\n        return counter;\r\n      })\r\n    });\r\n  };\r\n\r\n  resetValues = () => {\r\n    this.setState({\r\n      counters: this.state.counters.map(counter => {\r\n        counter.value = 0;\r\n        return counter;\r\n      })\r\n    });\r\n  };\r\n}\r\n\r\nexport default Counters;\r\n"]},"metadata":{},"sourceType":"module"}