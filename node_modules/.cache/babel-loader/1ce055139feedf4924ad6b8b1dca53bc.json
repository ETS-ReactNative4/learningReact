{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\root\\\\counter-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\root\\\\counter-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\root\\\\counter-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\root\\\\counter-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\root\\\\counter-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\root\\\\counter-app\\\\src\\\\components\\\\counter.jsx\";\nimport React, { Component } from \"react\";\n\nvar Counter =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Counter, _Component);\n\n  function Counter() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Counter);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Counter)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      count: 0,\n      tags: [\"Tag1\", \"Tag2\", \"Tag3\"]\n    };\n    _this.styles = {\n      fontSize: 15,\n      fontWeight: \"bold\"\n    };\n\n    _this.handleIncrement = function () {\n      _this.setState({\n        count: _this.state.count + 1\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Counter, [{\n    key: \"render\",\n    // Class render method\n    value: function render() {\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        style: this.styles,\n        className: this.selectBadgeClass(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, this.formatNumber()), React.createElement(\"button\", {\n        className: \"btn btn-secondary btn-sm\",\n        onClick: this.handleIncrement,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, \"Increment\"), this.state.tags.length === 0 && React.createElement(\"p\", {\n        class: \"m-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, \"Please enter atleast one tag!!\"), this.renderTags());\n    } // Increment the counter\n\n  }, {\n    key: \"renderTags\",\n    // Method to render tags\n    value: function renderTags() {\n      return this.state.tags.length === 0 ? React.createElement(\"p\", {\n        class: \"m-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"There are no tags!!\") : React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, this.state.tags.map(function (tag) {\n        return React.createElement(\"li\", {\n          key: tag,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, tag);\n      }));\n    } // Define badge classes\n\n  }, {\n    key: \"selectBadgeClass\",\n    value: function selectBadgeClass() {\n      var badgeClasses = \"badge m-2 badge-\";\n      badgeClasses += this.state.count === 0 ? \"warning\" : \"primary\";\n      return badgeClasses;\n    } // Format number method\n\n  }, {\n    key: \"formatNumber\",\n    value: function formatNumber() {\n      var count = this.state.count;\n      return count === 0 ? \"Zero\" : count;\n    }\n  }]);\n\n  return Counter;\n}(Component);\n\nexport { Counter as default };","map":{"version":3,"sources":["C:\\Users\\root\\counter-app\\src\\components\\counter.jsx"],"names":["React","Component","Counter","state","count","tags","styles","fontSize","fontWeight","handleIncrement","setState","selectBadgeClass","formatNumber","length","renderTags","map","tag","badgeClasses"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAEqBC,O;;;;;;;;;;;;;;;;;UAEnBC,K,GAAQ;AACNC,MAAAA,KAAK,EAAE,CADD;AAENC,MAAAA,IAAI,EAAE,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB;AAFA,K;UAMRC,M,GAAS;AACPC,MAAAA,QAAQ,EAAE,EADH;AAEPC,MAAAA,UAAU,EAAE;AAFL,K;;UA2BTC,e,GAAkB,YAAM;AACtB,YAAKC,QAAL,CAAc;AAAEN,QAAAA,KAAK,EAAE,MAAKD,KAAL,CAAWC,KAAX,GAAmB;AAA5B,OAAd;AACD,K;;;;;;;AAxBD;6BACS;AACP,aACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,KAAK,EAAE,KAAKE,MAAlB;AAA0B,QAAA,SAAS,EAAE,KAAKK,gBAAL,EAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKC,YAAL,EADH,CADF,EAIE;AACE,QAAA,SAAS,EAAC,0BADZ;AAEE,QAAA,OAAO,EAAE,KAAKH,eAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAJF,EAUG,KAAKN,KAAL,CAAWE,IAAX,CAAgBQ,MAAhB,KAA2B,CAA3B,IACC;AAAG,QAAA,KAAK,EAAC,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAXJ,EAaG,KAAKC,UAAL,EAbH,CADF;AAiBD,K,CAED;;;;AAKA;iCACa;AACX,aAAO,KAAKX,KAAL,CAAWE,IAAX,CAAgBQ,MAAhB,KAA2B,CAA3B,GACL;AAAG,QAAA,KAAK,EAAC,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADK,GAGL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKV,KAAL,CAAWE,IAAX,CAAgBU,GAAhB,CAAoB,UAAAC,GAAG;AAAA,eACtB;AAAI,UAAA,GAAG,EAAEA,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAeA,GAAf,CADsB;AAAA,OAAvB,CADH,CAHF;AASD,K,CAED;;;;uCACmB;AACjB,UAAIC,YAAY,GAAG,kBAAnB;AACAA,MAAAA,YAAY,IAAI,KAAKd,KAAL,CAAWC,KAAX,KAAqB,CAArB,GAAyB,SAAzB,GAAqC,SAArD;AACA,aAAOa,YAAP;AACD,K,CAED;;;;mCACe;AAAA,UACLb,KADK,GACK,KAAKD,KADV,CACLC,KADK;AAEb,aAAOA,KAAK,KAAK,CAAV,GAAc,MAAd,GAAuBA,KAA9B;AACD;;;;EA/DkCH,S;;SAAhBC,O","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nexport default class Counter extends Component {\r\n  // Class state variables\r\n  state = {\r\n    count: 0,\r\n    tags: [\"Tag1\", \"Tag2\", \"Tag3\"]\r\n  };\r\n\r\n  // Define styles\r\n  styles = {\r\n    fontSize: 15,\r\n    fontWeight: \"bold\"\r\n  };\r\n\r\n  // Class render method\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <span style={this.styles} className={this.selectBadgeClass()}>\r\n          {this.formatNumber()}\r\n        </span>\r\n        <button\r\n          className=\"btn btn-secondary btn-sm\"\r\n          onClick={this.handleIncrement}\r\n        >\r\n          Increment\r\n        </button>\r\n        {this.state.tags.length === 0 && (\r\n          <p class=\"m-2\">Please enter atleast one tag!!</p>\r\n        )}\r\n        {this.renderTags()}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  // Increment the counter\r\n  handleIncrement = () => {\r\n    this.setState({ count: this.state.count + 1 });\r\n  };\r\n\r\n  // Method to render tags\r\n  renderTags() {\r\n    return this.state.tags.length === 0 ? (\r\n      <p class=\"m-2\">There are no tags!!</p>\r\n    ) : (\r\n      <ul>\r\n        {this.state.tags.map(tag => (\r\n          <li key={tag}>{tag}</li>\r\n        ))}\r\n      </ul>\r\n    );\r\n  }\r\n\r\n  // Define badge classes\r\n  selectBadgeClass() {\r\n    let badgeClasses = \"badge m-2 badge-\";\r\n    badgeClasses += this.state.count === 0 ? \"warning\" : \"primary\";\r\n    return badgeClasses;\r\n  }\r\n\r\n  // Format number method\r\n  formatNumber() {\r\n    const { count } = this.state;\r\n    return count === 0 ? \"Zero\" : count;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}