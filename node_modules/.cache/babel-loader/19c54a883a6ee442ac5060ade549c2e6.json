{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\root\\\\counter-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\root\\\\counter-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\root\\\\counter-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\root\\\\counter-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\root\\\\counter-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\root\\\\counter-app\\\\src\\\\components\\\\counter.jsx\";\nimport React, { Component } from \"react\";\n\nvar Counter =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Counter, _Component);\n\n  function Counter() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Counter);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Counter)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      count: _this.props.value\n    };\n    _this.styles = {\n      fontSize: \"0.8rem\",\n      fontWeight: \"bold\",\n      verticalAlign: \"middle\",\n      width: \"3rem\"\n    };\n\n    _this.handleIncrement = function () {\n      _this.setState({\n        count: _this.state.count + 1\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Counter, [{\n    key: \"render\",\n    // Class render method\n    value: function render() {\n      return React.createElement(\"div\", {\n        style: {\n          marginTop: \"1%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        style: this.styles,\n        className: this.selectBadgeClass(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, this.formatNumber()), React.createElement(\"button\", {\n        className: \"btn btn-secondary btn-sm\",\n        onClick: this.handleIncrement,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, \"Increment\"));\n    } // Increment the counter\n\n  }, {\n    key: \"selectBadgeClass\",\n    // Define badge classes\n    value: function selectBadgeClass() {\n      var badgeClasses = \"badge m-2 badge-\";\n      badgeClasses += this.state.count === 0 ? \"warning\" : \"primary\";\n      return badgeClasses;\n    } // Format number method\n\n  }, {\n    key: \"formatNumber\",\n    value: function formatNumber() {\n      var count = this.state.count;\n      return count === 0 ? \"Zero\" : count;\n    }\n  }]);\n\n  return Counter;\n}(Component);\n\nexport { Counter as default };","map":{"version":3,"sources":["C:\\Users\\root\\counter-app\\src\\components\\counter.jsx"],"names":["React","Component","Counter","state","count","props","value","styles","fontSize","fontWeight","verticalAlign","width","handleIncrement","setState","marginTop","selectBadgeClass","formatNumber","badgeClasses"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAEqBC,O;;;;;;;;;;;;;;;;;UAEnBC,K,GAAQ;AACNC,MAAAA,KAAK,EAAE,MAAKC,KAAL,CAAWC;AADZ,K;UAKRC,M,GAAS;AACPC,MAAAA,QAAQ,EAAE,QADH;AAEPC,MAAAA,UAAU,EAAE,MAFL;AAGPC,MAAAA,aAAa,EAAE,QAHR;AAIPC,MAAAA,KAAK,EAAE;AAJA,K;;UAyBTC,e,GAAkB,YAAM;AACtB,YAAKC,QAAL,CAAc;AAAET,QAAAA,KAAK,EAAE,MAAKD,KAAL,CAAWC,KAAX,GAAmB;AAA5B,OAAd;AACD,K;;;;;;;AApBD;6BACS;AACP,aACE;AAAK,QAAA,KAAK,EAAE;AAAEU,UAAAA,SAAS,EAAE;AAAb,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,KAAK,EAAE,KAAKP,MAAlB;AAA0B,QAAA,SAAS,EAAE,KAAKQ,gBAAL,EAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKC,YAAL,EADH,CADF,EAIE;AACE,QAAA,SAAS,EAAC,0BADZ;AAEE,QAAA,OAAO,EAAE,KAAKJ,eAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAJF,CADF;AAaD,K,CAED;;;;AAKA;uCACmB;AACjB,UAAIK,YAAY,GAAG,kBAAnB;AACAA,MAAAA,YAAY,IAAI,KAAKd,KAAL,CAAWC,KAAX,KAAqB,CAArB,GAAyB,SAAzB,GAAqC,SAArD;AACA,aAAOa,YAAP;AACD,K,CAED;;;;mCACe;AAAA,UACLb,KADK,GACK,KAAKD,KADV,CACLC,KADK;AAEb,aAAOA,KAAK,KAAK,CAAV,GAAc,MAAd,GAAuBA,KAA9B;AACD;;;;EA/CkCH,S;;SAAhBC,O","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nexport default class Counter extends Component {\r\n  // Class state variables\r\n  state = {\r\n    count: this.props.value\r\n  };\r\n\r\n  // Define styles\r\n  styles = {\r\n    fontSize: \"0.8rem\",\r\n    fontWeight: \"bold\",\r\n    verticalAlign: \"middle\",\r\n    width: \"3rem\"\r\n  };\r\n\r\n  // Class render method\r\n  render() {\r\n    return (\r\n      <div style={{ marginTop: \"1%\" }}>\r\n        <span style={this.styles} className={this.selectBadgeClass()}>\r\n          {this.formatNumber()}\r\n        </span>\r\n        <button\r\n          className=\"btn btn-secondary btn-sm\"\r\n          onClick={this.handleIncrement}\r\n        >\r\n          Increment\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Increment the counter\r\n  handleIncrement = () => {\r\n    this.setState({ count: this.state.count + 1 });\r\n  };\r\n\r\n  // Define badge classes\r\n  selectBadgeClass() {\r\n    let badgeClasses = \"badge m-2 badge-\";\r\n    badgeClasses += this.state.count === 0 ? \"warning\" : \"primary\";\r\n    return badgeClasses;\r\n  }\r\n\r\n  // Format number method\r\n  formatNumber() {\r\n    const { count } = this.state;\r\n    return count === 0 ? \"Zero\" : count;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}