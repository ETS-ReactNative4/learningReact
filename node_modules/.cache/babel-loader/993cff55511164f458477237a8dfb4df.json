{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\root\\\\counter-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\root\\\\counter-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\root\\\\counter-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\root\\\\counter-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\root\\\\counter-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\root\\\\counter-app\\\\src\\\\components\\\\pagenation.jsx\";\nimport React, { Component } from \"react\";\nimport Page from \"./page\";\n\nvar Pagenation =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Pagenation, _Component);\n\n  function Pagenation() {\n    _classCallCheck(this, Pagenation);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Pagenation).apply(this, arguments));\n  }\n\n  _createClass(Pagenation, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          numberOfPages = _this$props.numberOfPages,\n          pageClick = _this$props.pageClick;\n      return React.createElement(\"nav\", {\n        \"aria-label\": \"Page navigation\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 8\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        className: \"pagination justify-content-end\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9\n        },\n        __self: this\n      }, this.renderPages(numberOfPages, pageClick, pageNumber)));\n    }\n  }, {\n    key: \"renderPages\",\n    value: function renderPages(numberOfPages, pageClick, pageNumber) {\n      var pages = [];\n\n      for (var i = 0; i < numberOfPages; i++) {\n        var isSelected = false;\n\n        if (i + 1 === pageNumber) {\n          isSelected = true;\n        }\n\n        pages.push(React.createElement(Page, {\n          key: \"Page-\" + (i + 1),\n          pageClick: pageClick,\n          pageNumber: i + 1,\n          pageText: i + +1,\n          isSelected: isSelected,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        }));\n      }\n\n      return pages;\n    }\n  }]);\n\n  return Pagenation;\n}(Component);\n\nexport default Pagenation;","map":{"version":3,"sources":["C:\\Users\\root\\counter-app\\src\\components\\pagenation.jsx"],"names":["React","Component","Page","Pagenation","props","numberOfPages","pageClick","renderPages","pageNumber","pages","i","isSelected","push"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,QAAjB;;IAEMC,U;;;;;;;;;;;;;6BACK;AAAA,wBAC8B,KAAKC,KADnC;AAAA,UACCC,aADD,eACCA,aADD;AAAA,UACgBC,SADhB,eACgBA,SADhB;AAEP,aACE;AAAK,sBAAW,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,SAAS,EAAC,gCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKC,WAAL,CAAiBF,aAAjB,EAAgCC,SAAhC,EAA2CE,UAA3C,CADH,CADF,CADF;AAOD;;;gCAEWH,a,EAAeC,S,EAAWE,U,EAAY;AAChD,UAAIC,KAAK,GAAG,EAAZ;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,aAApB,EAAmCK,CAAC,EAApC,EAAwC;AACtC,YAAIC,UAAU,GAAG,KAAjB;;AACA,YAAID,CAAC,GAAG,CAAJ,KAAUF,UAAd,EAA0B;AACxBG,UAAAA,UAAU,GAAG,IAAb;AACD;;AACDF,QAAAA,KAAK,CAACG,IAAN,CACE,oBAAC,IAAD;AACE,UAAA,GAAG,EAAE,WAAWF,CAAC,GAAG,CAAf,CADP;AAEE,UAAA,SAAS,EAAEJ,SAFb;AAGE,UAAA,UAAU,EAAEI,CAAC,GAAG,CAHlB;AAIE,UAAA,QAAQ,EAAEA,CAAC,GAAG,CAAC,CAJjB;AAKE,UAAA,UAAU,EAAEC,UALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;AACD,aAAOF,KAAP;AACD;;;;EA9BsBR,S;;AAiCzB,eAAeE,UAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport Page from \"./page\";\r\n\r\nclass Pagenation extends Component {\r\n  render() {\r\n    const { numberOfPages, pageClick } = this.props;\r\n    return (\r\n      <nav aria-label=\"Page navigation\">\r\n        <ul className=\"pagination justify-content-end\">\r\n          {this.renderPages(numberOfPages, pageClick, pageNumber)}\r\n        </ul>\r\n      </nav>\r\n    );\r\n  }\r\n\r\n  renderPages(numberOfPages, pageClick, pageNumber) {\r\n    let pages = [];\r\n    for (let i = 0; i < numberOfPages; i++) {\r\n      let isSelected = false;\r\n      if (i + 1 === pageNumber) {\r\n        isSelected = true;\r\n      }\r\n      pages.push(\r\n        <Page\r\n          key={\"Page-\" + (i + 1)}\r\n          pageClick={pageClick}\r\n          pageNumber={i + 1}\r\n          pageText={i + +1}\r\n          isSelected={isSelected}\r\n        />\r\n      );\r\n    }\r\n    return pages;\r\n  }\r\n}\r\n\r\nexport default Pagenation;\r\n"]},"metadata":{},"sourceType":"module"}